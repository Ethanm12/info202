/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GUI.helpers.SimpleListModel;
import GUI.helpers.ValidationHelper;
import dao.DAOException;
import dao.ManageProductData;
import dao.ManageProductsDAO;
import domain.Product;
import java.awt.Window;
import java.math.BigDecimal;
import java.util.Collection;
import javax.swing.JOptionPane;

public class ProductEntry extends javax.swing.JDialog {

    private final ManageProductData productDAO;
    private SimpleListModel myModel = new SimpleListModel();
    private Product product = new Product();
    private ValidationHelper validHelp = new ValidationHelper();

    /**
     * Creates new form EntryDialog
     */
    // Constructor ised for adding a new product
    public ProductEntry(Window parent, boolean modal, ManageProductData productDAO) {
        super(parent);
        super.setModal(modal);
        this.productDAO = productDAO;
        
        initComponents();
        comboBoxCategory.setEditable(true);

        Collection<String> categories = productDAO.getCategories();
        myModel.updateItems(categories);
        comboBoxCategory.setModel(myModel);

        // add a formatter to the price text field
        validHelp.addTypeFormatter(txtPrice, "#0.00", BigDecimal.class);
        validHelp.addTypeFormatter(txtQuantity, "#0.00", BigDecimal.class);
    }

    public ProductEntry(Window parent, boolean modal, Product productToEdit, ManageProductData productDAO) {
        this(parent, modal, productDAO);
        this.product = productToEdit;
        
        
        txtID.setText(String.valueOf(product.getProductID()));
        txtName.setText(product.getName());
        txtDescription.setText(product.getDescription());
        comboBoxCategory.setSelectedItem(product.getCategory());
        txtPrice.setValue(product.getListPrice());
        txtQuantity.setValue(product.getQuantityInStock());

//        BigDecimal price = new BigDecimal(txtPrice.getText());
//        BigDecimal quantity = new BigDecimal(txtQuantity.getText());
//        product.setListPrice(price);
//        product.setQuantityInStock(quantity);
        txtID.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelProductID = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        scrollDescription = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        labelCategory = new javax.swing.JLabel();
        comboBoxCategory = new javax.swing.JComboBox<>();
        labelPrice = new javax.swing.JLabel();
        labelQuantity = new javax.swing.JLabel();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabelProductEditor = new javax.swing.JLabel();
        txtID = new javax.swing.JFormattedTextField();
        txtName = new javax.swing.JFormattedTextField();
        txtPrice = new javax.swing.JFormattedTextField();
        txtQuantity = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelProductID.setText("productID");

        labelName.setText("name");

        labelDescription.setText("description");

        scrollDescription.setName("txtDescription"); // NOI18N

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.setName("txtDescription"); // NOI18N
        scrollDescription.setViewportView(txtDescription);

        labelCategory.setText("category");

        comboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCategory.setName("cmbCategory"); // NOI18N
        comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCategoryActionPerformed(evt);
            }
        });

        labelPrice.setText("price");

        labelQuantity.setText("quantity");

        buttonSave.setText("save");
        buttonSave.setName("btnSave"); // NOI18N
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setText("cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jLabelProductEditor.setText("Product Editor");

        txtID.setName("txtID"); // NOI18N

        txtName.setName("txtName"); // NOI18N

        txtPrice.setName("txtPrice"); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        txtQuantity.setName("txtQuantity"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelQuantity)
                            .addComponent(labelPrice)
                            .addComponent(labelCategory)
                            .addComponent(labelProductID)
                            .addComponent(labelName)
                            .addComponent(labelDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxCategory, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrollDescription, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                            .addComponent(txtID)
                            .addComponent(txtName)
                            .addComponent(txtPrice)
                            .addComponent(txtQuantity)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(jLabelProductEditor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelProductEditor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelProductID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDescription)
                    .addComponent(scrollDescription, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCategoryActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed

//        boolean notSelected = listPReport.isSelectionEmpty();
        try {
            Integer id = new Integer(txtID.getText());

            if (productDAO.search(id) != null && txtID.isEditable()) {
                JOptionPane.showMessageDialog(this, "ProductID already exists.");
                return;
            }

            String name = txtName.getText();
            String description = txtDescription.getText();
            String category = (String) comboBoxCategory.getSelectedItem();

            BigDecimal price = (BigDecimal) txtPrice.getValue();

            BigDecimal quantity = (BigDecimal) txtQuantity.getValue();

            product.setProductID(id);
            product.setName(name);
            product.setDescription(description);
            product.setCategory(category);
            product.setListPrice(price);
            product.setQuantityInStock(quantity);

            //        System.out.println(product);
            if (validHelp.isObjectValid(product)) {

                productDAO.save(product);
                productDAO.getProducts();
                dispose();
            }

            } catch (DAOException ex) {
//                throw new DAOException(ex.getMessage(), ex);
                JOptionPane.showMessageDialog(this, "Data related problem has occured");
            }

    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonSave;
    private javax.swing.JComboBox<String> comboBoxCategory;
    private javax.swing.JLabel jLabelProductEditor;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelProductID;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JScrollPane scrollDescription;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JFormattedTextField txtID;
    private javax.swing.JFormattedTextField txtName;
    private javax.swing.JFormattedTextField txtPrice;
    private javax.swing.JFormattedTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

}
